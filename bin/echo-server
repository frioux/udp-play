#!/usr/bin/env perl

use 5.16.1;
use warnings;

use List::Util 'max';

use Socket;
use IO::Async::Socket;
use IO::Async::Loop;
use IO::Async::Connector;
use IO::Async::Timer::Periodic;
use Net::Async::HTTP::Server;
use HTTP::Response;

my $loop = IO::Async::Loop->new;

my $s = IO::Socket::INET->new(
   Proto => 'udp',
   ReuseAddr => 1,
   Type => SOCK_DGRAM,
   LocalPort => 8001,
) or die "No bind: $@\n";

my $timer = IO::Async::Timer::Periodic->new(
   interval => 60,

   on_tick => \&mq,
);

$timer->start;
$loop->add($timer);

my $httpserver = Net::Async::HTTP::Server->new(
   on_request => sub {
      my $self = shift;
      my ( $req ) = @_;

      my $response = HTTP::Response->new( 200 );
      $response->add_content( "Status info goes here\n" );
      $response->content_type( 'text/plain' );
      $response->content_length( length $response->content );

      $req->respond( $response );
   },
);

$loop->add($httpserver);
$httpserver->listen(
   addr => { family => 'inet6', socktype => 'stream', port => 8080 },
   on_listen_error => sub { die "Cannot listen - $_[-1]\n" },
);

my $sock = IO::Async::Socket->new(
   handle => $s,
   on_recv => \&mq,
   on_recv_error => sub { die "Cannot recv - $_[1]\n" },
);
$loop->add($sock);
$loop->run;

my $in_mq;
sub mq {
   return if $in_mq;
   $in_mq = 1;

   $in_mq = 0;
}
